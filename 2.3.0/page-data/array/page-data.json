{"componentChunkName":"component---src-templates-api-page-js","path":"/array","webpackCompilationHash":"b94ce00d5a0be8db1045","result":{"data":{"apiPageJson":{"pid":"array","parentPid":"module","title":"Module","items":[{"pid":"array","type":"overview","override":false,"deprecated":false,"name":"array","types":{"prefix":"","names":[""],"isOptional":false},"description":"","codeInfo":{"filename":"inArray.js","lineNum":32,"linkUrl":"https://github.com/nhn/tui.code-snippet/blob/v2.3.0/array/inArray.js"},"sees":[""],"todos":[""],"augments":[""],"params":[{"name":"","description":"","defaultVal":"","types":{"prefix":"","names":[""],"isOptional":false},"properties":[{"name":"","description":"","defaultVal":"","types":{"prefix":"","names":[""],"isOptional":false},"properties":[{"name":"","description":"","defaultVal":"","types":{"prefix":"","names":[""],"isOptional":false},"properties":[{"name":"","description":"","defaultVal":"","types":{"prefix":"","names":[""],"isOptional":false}}]}]}]}],"examples":[{"description":"","code":""}],"returns":[{"types":{"prefix":"","names":[""],"isOptional":false},"description":""}]},{"pid":"inArray","type":"static-method","override":false,"deprecated":false,"name":"inArray(searchElement, array, startIndex)","types":{"prefix":"","names":[""],"isOptional":false},"description":"Returns the first index at which a given element can be found in the array<br>from start index(default 0), or -1 if it is not present.<br>It compares searchElement to elements of the Array using strict equality<br>(the same method used by the ===, or triple-equals, operator).","codeInfo":{"filename":"inArray.js","lineNum":32,"linkUrl":"https://github.com/nhn/tui.code-snippet/blob/v2.3.0/array/inArray.js"},"sees":[""],"todos":[""],"augments":[""],"params":[{"name":"searchElement","description":"Element to locate in the array","defaultVal":null,"types":{"prefix":"","names":["*"],"isOptional":false},"properties":null},{"name":"array","description":"Array that will be traversed.","defaultVal":null,"types":{"prefix":"","names":["Array"],"isOptional":false},"properties":null},{"name":"startIndex","description":"Start index in array for searching (default 0)","defaultVal":null,"types":{"prefix":"","names":["number"],"isOptional":false},"properties":null},{"name":"","description":"","defaultVal":"","types":{"prefix":"","names":[""],"isOptional":false},"properties":[{"name":"","description":"","defaultVal":"","types":{"prefix":"","names":[""],"isOptional":false},"properties":[{"name":"","description":"","defaultVal":"","types":{"prefix":"","names":[""],"isOptional":false},"properties":[{"name":"","description":"","defaultVal":"","types":{"prefix":"","names":[""],"isOptional":false}}]}]}]}],"examples":[{"description":"","code":"<span class=\"token keyword\">var</span> inArray <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'tui-code-snippet/array/inArray'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// node, commonjs</span>\n\n<span class=\"token keyword\">var</span> arr <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'one'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'two'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'three'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'four'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> idx1 <span class=\"token operator\">=</span> <span class=\"token function\">inArray</span><span class=\"token punctuation\">(</span><span class=\"token string\">'one'</span><span class=\"token punctuation\">,</span> arr<span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// -1</span>\n<span class=\"token keyword\">var</span> idx2 <span class=\"token operator\">=</span> <span class=\"token function\">inArray</span><span class=\"token punctuation\">(</span><span class=\"token string\">'one'</span><span class=\"token punctuation\">,</span> arr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 0</span>"},{"description":"","code":""}],"returns":[{"types":{"prefix":"","names":["number"],"isOptional":false},"description":"the First index at which a given element, or -1 if it is not present"},{"types":{"prefix":"","names":[""],"isOptional":false},"description":""}]},{"pid":"range","type":"static-method","override":false,"deprecated":false,"name":"range(start, stop, step)","types":{"prefix":"","names":[""],"isOptional":false},"description":"Generate an integer Array containing an arithmetic progression.","codeInfo":{"filename":"range.js","lineNum":25,"linkUrl":"https://github.com/nhn/tui.code-snippet/blob/v2.3.0/array/range.js"},"sees":[""],"todos":[""],"augments":[""],"params":[{"name":"start","description":"start index","defaultVal":null,"types":{"prefix":"","names":["number"],"isOptional":false},"properties":null},{"name":"stop","description":"stop index","defaultVal":null,"types":{"prefix":"","names":["number"],"isOptional":false},"properties":null},{"name":"step","description":"next visit index = current index + step","defaultVal":null,"types":{"prefix":"","names":["number"],"isOptional":false},"properties":null},{"name":"","description":"","defaultVal":"","types":{"prefix":"","names":[""],"isOptional":false},"properties":[{"name":"","description":"","defaultVal":"","types":{"prefix":"","names":[""],"isOptional":false},"properties":[{"name":"","description":"","defaultVal":"","types":{"prefix":"","names":[""],"isOptional":false},"properties":[{"name":"","description":"","defaultVal":"","types":{"prefix":"","names":[""],"isOptional":false}}]}]}]}],"examples":[{"description":"","code":"<span class=\"token keyword\">var</span> range <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'tui-code-snippet/array/range'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// node, commonjs</span>\n\n<span class=\"token function\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// [0, 1, 2, 3, 4]</span>\n<span class=\"token function\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// [1,2,3,4]</span>\n<span class=\"token function\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// [2,4,6,8]</span>\n<span class=\"token function\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// [10,8,6,4]</span>"},{"description":"","code":""}],"returns":[{"types":{"prefix":"","names":["Array"],"isOptional":false},"description":""},{"types":{"prefix":"","names":[""],"isOptional":false},"description":""}]},{"pid":"zip","type":"static-method","override":false,"deprecated":false,"name":"zip()","types":{"prefix":"","names":[""],"isOptional":false},"description":"Zip together multiple lists into a single array.","codeInfo":{"filename":"zip.js","lineNum":23,"linkUrl":"https://github.com/nhn/tui.code-snippet/blob/v2.3.0/array/zip.js"},"sees":[""],"todos":[""],"augments":[""],"params":[{"name":"","description":"","defaultVal":"","types":{"prefix":"","names":[""],"isOptional":false},"properties":[{"name":"","description":"","defaultVal":"","types":{"prefix":"","names":[""],"isOptional":false},"properties":[{"name":"","description":"","defaultVal":"","types":{"prefix":"","names":[""],"isOptional":false},"properties":[{"name":"","description":"","defaultVal":"","types":{"prefix":"","names":[""],"isOptional":false}}]}]}]}],"examples":[{"description":"","code":"<span class=\"token keyword\">var</span> zip <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'tui-code-snippet/array/zip'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// node, commonjs</span>\n\n<span class=\"token keyword\">var</span> result <span class=\"token operator\">=</span> <span class=\"token function\">zip</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'b'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'c'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// [1, 'a', true]</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// [2, 'b', false]</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// [3, 'c', true]</span>"},{"description":"","code":""}],"returns":[{"types":{"prefix":"","names":["Array"],"isOptional":false},"description":""},{"types":{"prefix":"","names":[""],"isOptional":false},"description":""}]}]}},"pageContext":{"isCreatedByStatefulCreatePages":false,"id":"array","filename":""}}}