{"componentChunkName":"component---src-templates-api-page-js","path":"/domEvent","webpackCompilationHash":"b94ce00d5a0be8db1045","result":{"data":{"apiPageJson":{"pid":"domEvent","parentPid":"module","title":"Module","items":[{"pid":"domEvent","type":"overview","override":false,"deprecated":false,"name":"domEvent","types":{"prefix":"","names":[""],"isOptional":false},"description":"","codeInfo":{"filename":"getMouseButton.js","lineNum":33,"linkUrl":"https://github.com/nhn/tui.code-snippet/blob/v2.3.0/domEvent/getMouseButton.js"},"sees":[""],"todos":[""],"augments":[""],"params":[{"name":"","description":"","defaultVal":"","types":{"prefix":"","names":[""],"isOptional":false},"properties":[{"name":"","description":"","defaultVal":"","types":{"prefix":"","names":[""],"isOptional":false},"properties":[{"name":"","description":"","defaultVal":"","types":{"prefix":"","names":[""],"isOptional":false},"properties":[{"name":"","description":"","defaultVal":"","types":{"prefix":"","names":[""],"isOptional":false}}]}]}]}],"examples":[{"description":"","code":""}],"returns":[{"types":{"prefix":"","names":[""],"isOptional":false},"description":""}]},{"pid":"getMouseButton","type":"static-method","override":false,"deprecated":false,"name":"getMouseButton(mouseEvent)","types":{"prefix":"","names":[""],"isOptional":false},"description":"Normalize mouse event's button attributes.","codeInfo":{"filename":"getMouseButton.js","lineNum":33,"linkUrl":"https://github.com/nhn/tui.code-snippet/blob/v2.3.0/domEvent/getMouseButton.js"},"sees":[""],"todos":[""],"augments":[""],"params":[{"name":"mouseEvent","description":"The mouse event object want to know.","defaultVal":null,"types":{"prefix":"","names":["MouseEvent"],"isOptional":false},"properties":null},{"name":"","description":"","defaultVal":"","types":{"prefix":"","names":[""],"isOptional":false},"properties":[{"name":"","description":"","defaultVal":"","types":{"prefix":"","names":[""],"isOptional":false},"properties":[{"name":"","description":"","defaultVal":"","types":{"prefix":"","names":[""],"isOptional":false},"properties":[{"name":"","description":"","defaultVal":"","types":{"prefix":"","names":[""],"isOptional":false}}]}]}]}],"examples":[{"description":"","code":""}],"returns":[{"types":{"prefix":"","names":["number"],"isOptional":false},"description":"The value of meaning which button is clicked?"},{"types":{"prefix":"","names":[""],"isOptional":false},"description":""}]},{"pid":"getMousePosition","type":"static-method","override":false,"deprecated":false,"name":"getMousePosition(position, relativeElement)","types":{"prefix":"","names":[""],"isOptional":false},"description":"Get mouse position from mouse event","codeInfo":{"filename":"getMousePosition.js","lineNum":21,"linkUrl":"https://github.com/nhn/tui.code-snippet/blob/v2.3.0/domEvent/getMousePosition.js"},"sees":[""],"todos":[""],"augments":[""],"params":[{"name":"position","description":"mouse position object","defaultVal":null,"types":{"prefix":"","names":["MouseEvent","object","Array.number"],"isOptional":false},"properties":null},{"name":"relativeElement","description":"HTML element that calculate relative<br> position","defaultVal":null,"types":{"prefix":"","names":["HTMLElement"],"isOptional":false},"properties":null},{"name":"","description":"","defaultVal":"","types":{"prefix":"","names":[""],"isOptional":false},"properties":[{"name":"","description":"","defaultVal":"","types":{"prefix":"","names":[""],"isOptional":false},"properties":[{"name":"","description":"","defaultVal":"","types":{"prefix":"","names":[""],"isOptional":false},"properties":[{"name":"","description":"","defaultVal":"","types":{"prefix":"","names":[""],"isOptional":false}}]}]}]}],"examples":[{"description":"","code":""}],"returns":[{"types":{"prefix":"","names":["Array.number"],"isOptional":false},"description":"mouse position"},{"types":{"prefix":"","names":[""],"isOptional":false},"description":""}]},{"pid":"getTarget","type":"static-method","override":false,"deprecated":false,"name":"getTarget(e)","types":{"prefix":"","names":[""],"isOptional":false},"description":"Get a target element from an event object.","codeInfo":{"filename":"getTarget.js","lineNum":14,"linkUrl":"https://github.com/nhn/tui.code-snippet/blob/v2.3.0/domEvent/getTarget.js"},"sees":[""],"todos":[""],"augments":[""],"params":[{"name":"e","description":"event object","defaultVal":null,"types":{"prefix":"","names":["Event"],"isOptional":false},"properties":null},{"name":"","description":"","defaultVal":"","types":{"prefix":"","names":[""],"isOptional":false},"properties":[{"name":"","description":"","defaultVal":"","types":{"prefix":"","names":[""],"isOptional":false},"properties":[{"name":"","description":"","defaultVal":"","types":{"prefix":"","names":[""],"isOptional":false},"properties":[{"name":"","description":"","defaultVal":"","types":{"prefix":"","names":[""],"isOptional":false}}]}]}]}],"examples":[{"description":"","code":""}],"returns":[{"types":{"prefix":"","names":["HTMLElement"],"isOptional":false},"description":"target element"},{"types":{"prefix":"","names":[""],"isOptional":false},"description":""}]},{"pid":"off","type":"static-method","override":false,"deprecated":false,"name":"off(element, types, handler)","types":{"prefix":"","names":[""],"isOptional":false},"description":"Unbind DOM events<br>If a handler function is not passed, remove all events of that type.","codeInfo":{"filename":"off.js","lineNum":40,"linkUrl":"https://github.com/nhn/tui.code-snippet/blob/v2.3.0/domEvent/off.js"},"sees":[""],"todos":[""],"augments":[""],"params":[{"name":"element","description":"element to unbind events","defaultVal":null,"types":{"prefix":"","names":["HTMLElement"],"isOptional":false},"properties":null},{"name":"types","description":"Space splitted events names or eventName:handler object","defaultVal":null,"types":{"prefix":"","names":["string","object"],"isOptional":false},"properties":null},{"name":"handler","description":"handler function","defaultVal":null,"types":{"prefix":"","names":["function"],"isOptional":true},"properties":null},{"name":"","description":"","defaultVal":"","types":{"prefix":"","names":[""],"isOptional":false},"properties":[{"name":"","description":"","defaultVal":"","types":{"prefix":"","names":[""],"isOptional":false},"properties":[{"name":"","description":"","defaultVal":"","types":{"prefix":"","names":[""],"isOptional":false},"properties":[{"name":"","description":"","defaultVal":"","types":{"prefix":"","names":[""],"isOptional":false}}]}]}]}],"examples":[{"description":"","code":"<span class=\"token comment\">// Following the example of domEvent#on</span>\n\n<span class=\"token comment\">// Unbind one event from an element.</span>\n<span class=\"token function\">off</span><span class=\"token punctuation\">(</span>div<span class=\"token punctuation\">,</span> <span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span> toggle<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Unbind multiple events with a same handler from multiple elements at once.</span>\n<span class=\"token comment\">// Use event names splitted by a space.</span>\n<span class=\"token function\">off</span><span class=\"token punctuation\">(</span>element<span class=\"token punctuation\">,</span> <span class=\"token string\">'mouseenter mouseleave'</span><span class=\"token punctuation\">,</span> changeColor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Unbind multiple events with different handlers from an element at once.</span>\n<span class=\"token comment\">// Use an object which of key is an event name and value is a handler function.</span>\n<span class=\"token function\">off</span><span class=\"token punctuation\">(</span>div<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n  keydown<span class=\"token punctuation\">:</span> highlight<span class=\"token punctuation\">,</span>\n  keyup<span class=\"token punctuation\">:</span> dehighlight\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Unbind events without handlers.</span>\n<span class=\"token function\">off</span><span class=\"token punctuation\">(</span>div<span class=\"token punctuation\">,</span> <span class=\"token string\">'drag'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>"},{"description":"","code":""}],"returns":[{"types":{"prefix":"","names":[""],"isOptional":false},"description":""}]},{"pid":"on","type":"static-method","override":false,"deprecated":false,"name":"on(element, types, handler, context)","types":{"prefix":"","names":[""],"isOptional":false},"description":"Bind DOM events.","codeInfo":{"filename":"on.js","lineNum":45,"linkUrl":"https://github.com/nhn/tui.code-snippet/blob/v2.3.0/domEvent/on.js"},"sees":[""],"todos":[""],"augments":[""],"params":[{"name":"element","description":"element to bind events","defaultVal":null,"types":{"prefix":"","names":["HTMLElement"],"isOptional":false},"properties":null},{"name":"types","description":"Space splitted events names or eventName:handler object","defaultVal":null,"types":{"prefix":"","names":["string","object"],"isOptional":false},"properties":null},{"name":"handler","description":"handler function or context for handler method","defaultVal":null,"types":{"prefix":"","names":["function","object"],"isOptional":false},"properties":null},{"name":"context","description":"context - context for handler method.","defaultVal":null,"types":{"prefix":"","names":["object"],"isOptional":true},"properties":null},{"name":"","description":"","defaultVal":"","types":{"prefix":"","names":[""],"isOptional":false},"properties":[{"name":"","description":"","defaultVal":"","types":{"prefix":"","names":[""],"isOptional":false},"properties":[{"name":"","description":"","defaultVal":"","types":{"prefix":"","names":[""],"isOptional":false},"properties":[{"name":"","description":"","defaultVal":"","types":{"prefix":"","names":[""],"isOptional":false}}]}]}]}],"examples":[{"description":"","code":"<span class=\"token keyword\">var</span> div <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'div'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Bind one event to an element.</span>\n<span class=\"token function\">on</span><span class=\"token punctuation\">(</span>div<span class=\"token punctuation\">,</span> <span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span> toggle<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Bind multiple events with a same handler to multiple elements at once.</span>\n<span class=\"token comment\">// Use event names splitted by a space.</span>\n<span class=\"token function\">on</span><span class=\"token punctuation\">(</span>div<span class=\"token punctuation\">,</span> <span class=\"token string\">'mouseenter mouseleave'</span><span class=\"token punctuation\">,</span> changeColor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Bind multiple events with different handlers to an element at once.</span>\n<span class=\"token comment\">// Use an object which of key is an event name and value is a handler function.</span>\n<span class=\"token function\">on</span><span class=\"token punctuation\">(</span>div<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n  keydown<span class=\"token punctuation\">:</span> highlight<span class=\"token punctuation\">,</span>\n  keyup<span class=\"token punctuation\">:</span> dehighlight\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Set a context for handler method.</span>\n<span class=\"token keyword\">var</span> name <span class=\"token operator\">=</span> <span class=\"token string\">'global'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> repository <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>name<span class=\"token punctuation\">:</span> <span class=\"token string\">'CodeSnippet'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">on</span><span class=\"token punctuation\">(</span>div<span class=\"token punctuation\">,</span> <span class=\"token string\">'drag'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> repository<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// Result when you drag a div: \"CodeSnippet\"</span>"},{"description":"","code":""}],"returns":[{"types":{"prefix":"","names":[""],"isOptional":false},"description":""}]},{"pid":"once","type":"static-method","override":false,"deprecated":false,"name":"once(element, types, handler, context)","types":{"prefix":"","names":[""],"isOptional":false},"description":"Bind DOM event. this event will unbind after invokes.","codeInfo":{"filename":"once.js","lineNum":22,"linkUrl":"https://github.com/nhn/tui.code-snippet/blob/v2.3.0/domEvent/once.js"},"sees":[""],"todos":[""],"augments":[""],"params":[{"name":"element","description":"HTMLElement to bind events.","defaultVal":null,"types":{"prefix":"","names":["HTMLElement"],"isOptional":false},"properties":null},{"name":"types","description":"Space splitted events names or<br> eventName:handler object.","defaultVal":null,"types":{"prefix":"","names":["string","object"],"isOptional":false},"properties":null},{"name":"handler","description":"handler function or context for handler method.","defaultVal":null,"types":{"prefix":"","names":["function","object"],"isOptional":false},"properties":null},{"name":"context","description":"context object for handler method.","defaultVal":null,"types":{"prefix":"","names":["object"],"isOptional":true},"properties":null},{"name":"","description":"","defaultVal":"","types":{"prefix":"","names":[""],"isOptional":false},"properties":[{"name":"","description":"","defaultVal":"","types":{"prefix":"","names":[""],"isOptional":false},"properties":[{"name":"","description":"","defaultVal":"","types":{"prefix":"","names":[""],"isOptional":false},"properties":[{"name":"","description":"","defaultVal":"","types":{"prefix":"","names":[""],"isOptional":false}}]}]}]}],"examples":[{"description":"","code":""}],"returns":[{"types":{"prefix":"","names":[""],"isOptional":false},"description":""}]},{"pid":"preventDefault","type":"static-method","override":false,"deprecated":false,"name":"preventDefault(e)","types":{"prefix":"","names":[""],"isOptional":false},"description":"Prevent default action","codeInfo":{"filename":"preventDefault.js","lineNum":13,"linkUrl":"https://github.com/nhn/tui.code-snippet/blob/v2.3.0/domEvent/preventDefault.js"},"sees":[""],"todos":[""],"augments":[""],"params":[{"name":"e","description":"event object","defaultVal":null,"types":{"prefix":"","names":["Event"],"isOptional":false},"properties":null},{"name":"","description":"","defaultVal":"","types":{"prefix":"","names":[""],"isOptional":false},"properties":[{"name":"","description":"","defaultVal":"","types":{"prefix":"","names":[""],"isOptional":false},"properties":[{"name":"","description":"","defaultVal":"","types":{"prefix":"","names":[""],"isOptional":false},"properties":[{"name":"","description":"","defaultVal":"","types":{"prefix":"","names":[""],"isOptional":false}}]}]}]}],"examples":[{"description":"","code":""}],"returns":[{"types":{"prefix":"","names":[""],"isOptional":false},"description":""}]},{"pid":"stopPropagation","type":"static-method","override":false,"deprecated":false,"name":"stopPropagation(e)","types":{"prefix":"","names":[""],"isOptional":false},"description":"Stop event propagation.","codeInfo":{"filename":"stopPropagation.js","lineNum":13,"linkUrl":"https://github.com/nhn/tui.code-snippet/blob/v2.3.0/domEvent/stopPropagation.js"},"sees":[""],"todos":[""],"augments":[""],"params":[{"name":"e","description":"event object","defaultVal":null,"types":{"prefix":"","names":["Event"],"isOptional":false},"properties":null},{"name":"","description":"","defaultVal":"","types":{"prefix":"","names":[""],"isOptional":false},"properties":[{"name":"","description":"","defaultVal":"","types":{"prefix":"","names":[""],"isOptional":false},"properties":[{"name":"","description":"","defaultVal":"","types":{"prefix":"","names":[""],"isOptional":false},"properties":[{"name":"","description":"","defaultVal":"","types":{"prefix":"","names":[""],"isOptional":false}}]}]}]}],"examples":[{"description":"","code":""}],"returns":[{"types":{"prefix":"","names":[""],"isOptional":false},"description":""}]}]}},"pageContext":{"isCreatedByStatefulCreatePages":false,"id":"domEvent","filename":""}}}