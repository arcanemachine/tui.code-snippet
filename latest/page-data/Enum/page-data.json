{"componentChunkName":"component---src-templates-api-page-js","path":"/Enum","webpackCompilationHash":"57345f4ca41f52912eb3","result":{"data":{"apiPageJson":{"pid":"Enum","parentPid":"class","title":"Class","items":[{"pid":"getName","type":"instance-method","override":false,"deprecated":false,"name":"getName(value)","types":{"prefix":"","names":[""],"isOptional":false},"description":"Return a key of the constant.","codeInfo":{"filename":"enum.js","lineNum":95,"linkUrl":"https://github.com/nhn/tui.code-snippet/blob/v2.3.2/enum/enum.js"},"sees":[""],"todos":[""],"augments":[""],"params":[{"name":"value","description":"A value of the constant.","defaultVal":null,"types":{"prefix":"","names":["number"],"isOptional":false},"properties":null},{"name":"","description":"","defaultVal":"","types":{"prefix":"","names":[""],"isOptional":false},"properties":[{"name":"","description":"","defaultVal":"","types":{"prefix":"","names":[""],"isOptional":false},"properties":[{"name":"","description":"","defaultVal":"","types":{"prefix":"","names":[""],"isOptional":false},"properties":[{"name":"","description":"","defaultVal":"","types":{"prefix":"","names":[""],"isOptional":false}}]}]}]}],"examples":[{"description":"","code":""}],"returns":[{"types":{"prefix":"","names":["string","undefined"],"isOptional":false},"description":"Key of the constant."},{"types":{"prefix":"","names":[""],"isOptional":false},"description":""}]},{"pid":"Enum","type":"overview","override":false,"deprecated":false,"name":"new Enum(itemList)","types":{"prefix":"","names":[""],"isOptional":false},"description":"Make a constant-list that has unique values.<br>In modern browsers (except IE8 and lower),<br> a value defined once can not be changed.","codeInfo":{"filename":"enum.js","lineNum":68,"linkUrl":"https://github.com/nhn/tui.code-snippet/blob/v2.3.2/enum/enum.js"},"sees":[""],"todos":[""],"augments":[""],"params":[{"name":"itemList","description":"Constant-list (An array of string is available)","defaultVal":null,"types":{"prefix":"","names":["string","Array.string"],"isOptional":false},"properties":null},{"name":"","description":"","defaultVal":"","types":{"prefix":"","names":[""],"isOptional":false},"properties":[{"name":"","description":"","defaultVal":"","types":{"prefix":"","names":[""],"isOptional":false},"properties":[{"name":"","description":"","defaultVal":"","types":{"prefix":"","names":[""],"isOptional":false},"properties":[{"name":"","description":"","defaultVal":"","types":{"prefix":"","names":[""],"isOptional":false}}]}]}]}],"examples":[{"description":"","code":"<span class=\"token keyword\">var</span> Enum <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'tui-code-snippet/enum/enum'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// node, commonjs</span>\n\n<span class=\"token keyword\">var</span> <span class=\"token constant\">MYENUM</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Enum</span><span class=\"token punctuation\">(</span><span class=\"token string\">'TYPE1'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'TYPE2'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> <span class=\"token constant\">MYENUM2</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Enum</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">'TYPE1'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'TYPE2'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//usage</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>value <span class=\"token operator\">===</span> <span class=\"token constant\">MYENUM</span><span class=\"token punctuation\">.</span><span class=\"token constant\">TYPE1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n     <span class=\"token operator\">...</span><span class=\"token punctuation\">.</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">//add (If a duplicate name is inputted, will be disregarded.)</span>\n<span class=\"token constant\">MYENUM</span><span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token string\">'TYPE3'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'TYPE4'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//get name of a constant by a value</span>\n<span class=\"token constant\">MYENUM</span><span class=\"token punctuation\">.</span><span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token constant\">MYENUM</span><span class=\"token punctuation\">.</span><span class=\"token constant\">TYPE1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 'TYPE1'</span>\n\n<span class=\"token comment\">// In modern browsers (except IE8 and lower), a value can not be changed in constants.</span>\n<span class=\"token keyword\">var</span> originalValue <span class=\"token operator\">=</span> <span class=\"token constant\">MYENUM</span><span class=\"token punctuation\">.</span><span class=\"token constant\">TYPE1</span><span class=\"token punctuation\">;</span>\n<span class=\"token constant\">MYENUM</span><span class=\"token punctuation\">.</span><span class=\"token constant\">TYPE1</span> <span class=\"token operator\">=</span> <span class=\"token number\">1234</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// maybe TypeError</span>\n<span class=\"token constant\">MYENUM</span><span class=\"token punctuation\">.</span><span class=\"token constant\">TYPE1</span> <span class=\"token operator\">===</span> originalValue<span class=\"token punctuation\">;</span> <span class=\"token comment\">// true</span>\n<span class=\"token operator\">*</span>"},{"description":"","code":""}],"returns":[{"types":{"prefix":"","names":[""],"isOptional":false},"description":""}]},{"pid":"set","type":"instance-method","override":false,"deprecated":false,"name":"set(itemList)","types":{"prefix":"","names":[""],"isOptional":false},"description":"Define a constants-list","codeInfo":{"filename":"enum.js","lineNum":78,"linkUrl":"https://github.com/nhn/tui.code-snippet/blob/v2.3.2/enum/enum.js"},"sees":[""],"todos":[""],"augments":[""],"params":[{"name":"itemList","description":"Constant-list (An array of string is available)","defaultVal":null,"types":{"prefix":"","names":["string","Array.string"],"isOptional":false},"properties":null},{"name":"","description":"","defaultVal":"","types":{"prefix":"","names":[""],"isOptional":false},"properties":[{"name":"","description":"","defaultVal":"","types":{"prefix":"","names":[""],"isOptional":false},"properties":[{"name":"","description":"","defaultVal":"","types":{"prefix":"","names":[""],"isOptional":false},"properties":[{"name":"","description":"","defaultVal":"","types":{"prefix":"","names":[""],"isOptional":false}}]}]}]}],"examples":[{"description":"","code":""}],"returns":[{"types":{"prefix":"","names":[""],"isOptional":false},"description":""}]}]}},"pageContext":{"isCreatedByStatefulCreatePages":false,"id":"Enum","filename":""}}}